listo =)


CODIGO-> INSTRUCCION CODIGO | ESTRUCTURA_IF CODIGO | SEPARADOR
INSTRUCCION-> VARIABLE; | ASIGNAR_VALOR; | LLAMAR_METODO; | return SEPARADOR VALOR;
LLAMAR_METODO-> CADENA ARGS | CADENA . CADENA ARGS
ARGS-> ( ARG ) | ()
ARG-> VARIABLE | VARIABLE,ARG
ASIGNAR_VALOR-> CADENA = VALOR
ESTRUCTURA_IF->SECCION_IF | SECCION_IF ELSE BLOQUE
SECCION_IF->IF(CONDICION)BLOQUE
BLOQUE->{CODIGO}
IF-> if
ELSE-> else
CONDICION-> VALOR COMPARADOR VALOR
COMPARADOR-> < | > | <= | >= | != | ==
DIGITOS-> DIGITO DIGITOS | DIGITO
DIGITO-> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
CADENA-> CARACTER CADENA | CARACTER
CARACTER-> a | b | c | ... | z
SEPARADOR-> " " SEPARADOR | \t SEPARADOR | \n SEPARADOR | EMPTY
FRACCION-> .DIGITOS
NUMERO-> -DIGITOS FRACCION | -DIGITOS | DIGITOS | DIGITOS FRACCION
VALOR-> null | false | true | "CADENA" | NUMERO | CADENA
TIPO_DATO-> char | int | short | long
VARIABLE-> TIPO_DATO SEPARADOR CADENA | TIPO_DATO SEPARADOR CADENA SEPARADOR = SEPARADOR VALOR
MODULE_NOMBRE-> CADENA .h
MODULE-> < MODULE_NOMBRE.h >
INCLUDE-> #include MODULE | #include MODULE SEPARADOR INCLUDE | EMPTY
METODO_ENCABEZADO-> TYPE SEPARADOR CADENA ARGS
DEFINICION-> METODO_ENCABEZADO;
METODO-> METODO_ENCABEZADO BLOQUE
METODOS-> METODO | EMPTY
CONTENIDO->INCLUDE SEPARADOR DEFINITION SEPARADOR METODOS
